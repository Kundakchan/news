{"remainingRequest":"/var/www/template/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/template/src/components/signUp.vue?vue&type=style&index=0&id=2020db48&lang=scss&scoped=true&","dependencies":[{"path":"/var/www/template/src/components/signUp.vue","mtime":1567849359456},{"path":"/var/www/template/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/var/www/template/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/template/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/template/node_modules/sass-loader/lib/loader.js","mtime":499162500000},{"path":"/var/www/template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/template/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.form__item {\n  a {\n    outline: none;\n  }\n  .from__alert {\n    display: none\n  }\n  &.form__error {\n    .from__alert {\n      display: block;\n    }\n  }\n}\n",{"version":3,"sources":["signUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"signUp.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"uk-container-xsmall uk-container\">\n    <form @submit.prevent=\"onSubmit\" novalidate>\n      <fieldset class=\"uk-fieldset uk-form-stacked\">\n        <legend class=\"uk-legend\">\n          <h2 class=\"uk-heading-line uk-text-center uk-margin-remove\"><span>{{ formSetting.title }}</span></h2>\n        </legend>\n        <div class=\"uk-margin form__item\" :class=\"{ 'form__error': $v.email.$error }\">\n          <label for=\"email\" class=\"uk-form-label\">{{ formSetting.email.label }}</label>\n          <div class=\"uk-form-controls uk-inline uk-display-inline\">\n              <span class=\"uk-form-icon\" uk-icon=\"user\"></span>\n              <input type=\"email\" class=\"uk-input\" :class=\"{ 'uk-form-danger': $v.email.$error }\" id=\"email\" :placeholder=\"formSetting.email.placeholder\" v-model.trim=\"email\" @change.prevent=\"$v.email.$touch()\">\n          </div>\n          <div v-if=\"!$v.email.required\" class=\"uk-alert-danger from__alert\" uk-alert>\n            <p>Необходимо заполнить форму!</p>\n          </div>\n          <div v-if=\"!$v.email.email\" class=\"uk-alert-danger from__alert\" uk-alert>\n            <p>Email не коректно заполнен!</p>\n          </div>\n        </div>\n        <div class=\"uk-margin form__item\" :class=\"{ 'form__error': $v.password.$error }\">\n          <label for=\"password\" class=\"uk-form-label\">{{ formSetting.password.label }}</label>\n          <div class=\"uk-form-controls uk-inline uk-display-inline\">\n            <span class=\"uk-form-icon\" uk-icon=\"lock\"></span>\n            <input type=\"password\" class=\"uk-input\" :class=\"{ 'uk-form-danger': $v.password.$error }\" id=\"password\" :placeholder=\"formSetting.password.placeholder\" v-model.trim=\"password\" @change.prevent=\"$v.password.$touch()\">\n          </div>\n          <div v-if=\"!$v.password.required\" class=\"uk-alert-danger from__alert\" uk-alert>\n            <p>Необходимо заполнить форму!</p>\n          </div>\n          <div v-if=\"!$v.password.minLength\" class=\"uk-alert-danger from__alert\" uk-alert>\n            <p>Пароль должен быть не менее {{ $v.password.$params.minLength.min }}-и символов!</p>\n          </div>\n        </div>\n        <div class=\"uk-margin form__item\" :class=\"{ 'form__error': $v.twoPassword.$error }\">\n          <label for=\"two-password\" class=\"uk-form-label\">{{ formSetting.twoPassword.label }}</label>\n          <div class=\"uk-form-controls uk-inline uk-display-inline\">\n            <span class=\"uk-form-icon\" uk-icon=\"lock\"></span>\n            <input type=\"password\" class=\"uk-input\" :class=\"{ 'uk-form-danger': $v.twoPassword.$error }\" id=\"two-password\" :placeholder=\"formSetting.twoPassword.placeholder\" v-model.trim=\"twoPassword\" @change.prevent=\"$v.twoPassword.$touch()\">\n          </div>\n          <div v-if=\"!$v.twoPassword.required\" class=\"uk-alert-danger from__alert\" uk-alert>\n            <p>Необходимо заполнить форму!</p>\n          </div>\n          <div v-if=\"!$v.twoPassword.sameAsPassword\" class=\"uk-alert-danger from__alert\" uk-alert>\n            <p>Пароль не совпадает!</p>\n          </div>\n        </div>\n      </fieldset>\n      <div class=\"uk-margin\">\n        <button class=\"uk-button uk-button-secondary uk-width-1-1\" :disabled=\"loading\"> <div v-if=\"loading\" uk-spinner></div> <span v-else>{{ formSetting.submit }}</span></button>\n        <div v-if=\"submitStatus === 'ERROR'\" class=\"uk-alert-danger\" uk-alert>\n          <p>Заполните форму!</p>\n        </div>\n        <div v-if=\"errorMessage !== null\" class=\"uk-alert-danger\" uk-alert>\n          <p>{{ errorMessage }}</p>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { email, required, minLength, sameAs } from 'vuelidate/lib/validators'\nexport default {\n  data () {\n    return {\n      formSetting: {\n        title: 'Регистрацыя'.toUpperCase(),\n        submit: 'отправить'.toUpperCase(),\n        email: {\n          label: 'email'.toUpperCase(),\n          placeholder: 'exampal@gmail.com'\n        },\n        password: {\n          label: 'Пароль'.toUpperCase(),\n          placeholder: 'password'\n        },\n        twoPassword: {\n          label: 'Повторите пароль'.toUpperCase(),\n          placeholder: 'password'\n        }\n      },\n      email: '',\n      password: '',\n      twoPassword: '',\n      submitStatus: null\n    }\n  },\n  validations: {\n    email: {\n      required,\n      email\n    },\n    password: {\n      required,\n      minLength: minLength(6)\n    },\n    twoPassword: {\n      required,\n      sameAsPassword: sameAs('password')\n    }\n  },\n  methods: {\n    onSubmit () {\n      if (this.$v.$invalid) {\n        this.submitStatus = 'ERROR'\n      } else {\n        this.$store.dispatch('SIGN_UP', { user: this.email, password: this.password })\n          .then(() => {\n            this.$router.push('/')\n          })\n      }\n    }\n  },\n  computed: {\n    loading () {\n      return this.$store.getters.getProcessing\n    },\n    errorMessage () {\n      return this.$store.getters.getError\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.form__item {\n  a {\n    outline: none;\n  }\n  .from__alert {\n    display: none\n  }\n  &.form__error {\n    .from__alert {\n      display: block;\n    }\n  }\n}\n</style>\n"]}]}